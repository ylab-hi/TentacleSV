"""
TentacleSV: Main Snakefile for SV calling and merging pipeline
This pipeline performs structural variant detection using multiple callers and 
merges the results using OctopusV.
"""

from snakemake.utils import min_version

# Set minimum required Snakemake version
min_version("6.0.0")

# Load main configuration file
configfile: "config/config.yaml"

# Import helper modules and rules
include: "rules/common.smk"    # Common functions and variables
include: "rules/mapping.smk"   # Read mapping rules
include: "rules/sv_calling.smk"  # SV detection rules
include: "rules/merge.smk"     # SV merging rules

# Function to generate list of final output files
def get_final_outputs():
    """
    Determines the final output files that should be generated by the pipeline.
    Returns:
        list: Paths to all final output files
    """
    final_outputs = []
    
    # Add merged and annotated VCF files for each sample
    final_outputs.extend(
        expand("results/merged/{sample}.vcf", sample=SAMPLES)
    )
    
    # Add UpSet plots if enabled in config
    if config["output"]["upset_plot"]:
        final_outputs.extend(
            expand("results/plots/{sample}_upset.png", sample=SAMPLES)
        )
    
    return final_outputs

# Default target rule that specifies the desired outputs
rule all:
    """
    Target rule that collects all expected output files.
    This rule does not execute any commands but defines 
    which files should be created by the pipeline.
    """
    input:
        get_final_outputs()

# Print pipeline configuration info
onstart:
    """
    Actions to perform before pipeline execution begins.
    Prints configuration summary and creates output directories.
    """
    print("TentacleSV Pipeline Configuration:")
    print(f"- Sequencing type: {config['seq_type']}")
    print(f"- Number of samples: {len(SAMPLES)}")
    if config['seq_type'] == 'short':
        print("- Active callers: " + ", ".join(config['callers']['short_read']))
    elif config['seq_type'] == 'long_pacbio':
        print("- Active callers: " + ", ".join(config['callers']['long_read_pacbio']))
    elif config['seq_type'] == 'long_ont':
        print("- Active callers: " + ", ".join(config['callers']['long_read_ont']))

# Report completion status
onsuccess:
    """
    Actions to perform when pipeline completes successfully.
    """
    print("TentacleSV pipeline completed successfully!")
    print("Output files can be found in: " + config["output"]["directory"])

onerror:
    """
    Actions to perform if pipeline execution fails.
    """
    print("Pipeline execution failed. Please check the log files for errors.")
